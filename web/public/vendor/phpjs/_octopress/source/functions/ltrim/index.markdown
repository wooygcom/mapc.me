---
layout: page
title: "JavaScript ltrim function"
comments: true
sharing: true
footer: true
alias:
- /functions/view/ltrim:467
- /functions/view/ltrim
- /functions/view/467
- /functions/ltrim:467
- /functions/467
---
<!-- Generated by Rakefile:build -->
A JavaScript equivalent of PHP's ltrim

{% codeblock strings/ltrim.js lang:js https://raw.github.com/kvz/phpjs/master/functions/strings/ltrim.js raw on github %}
function ltrim(str, charlist) {
  //  discuss at: http://phpjs.org/functions/ltrim/
  // original by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)
  //    input by: Erkekjetter
  // improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)
  // bugfixed by: Onno Marsman
  //   example 1: ltrim('    Kevin van Zonneveld    ');
  //   returns 1: 'Kevin van Zonneveld    '

  charlist = !charlist ? ' \\s\u00A0' : (charlist + '')
    .replace(/([\[\]\(\)\.\?\/\*\{\}\+\$\^\:])/g, '$1');
  var re = new RegExp('^[' + charlist + ']+', 'g');
  return (str + '')
    .replace(re, '');
}
{% endcodeblock %}

 - [Raw function on GitHub](https://github.com/kvz/phpjs/blob/master/functions/strings/ltrim.js)

Please note that php.js uses JavaScript objects as substitutes for PHP arrays, they are 
the closest match to this hashtable-like data structure. 

Please also note that php.js offers community built functions and goes by the 
[McDonald's Theory](https://medium.com/what-i-learned-building/9216e1c9da7d). We'll put online 
functions that are far from perfect, in the hopes to spark better contributions. 
Do you have one? Then please just: 

 - [Edit on GitHub](https://github.com/kvz/phpjs/edit/master/functions/strings/ltrim.js)


### Other PHP functions in the strings extension
{% render_partial _includes/custom/strings.html %}
