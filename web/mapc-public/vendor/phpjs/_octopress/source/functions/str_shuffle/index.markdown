---
layout: page
title: "JavaScript str_shuffle function"
comments: true
sharing: true
footer: true
alias:
- /functions/view/str_shuffle:529
- /functions/view/str_shuffle
- /functions/view/529
- /functions/str_shuffle:529
- /functions/529
---
<!-- Generated by Rakefile:build -->
A JavaScript equivalent of PHP's str_shuffle

{% codeblock strings/str_shuffle.js lang:js https://raw.github.com/kvz/phpjs/master/functions/strings/str_shuffle.js raw on github %}
function str_shuffle(str) {
  //  discuss at: http://phpjs.org/functions/str_shuffle/
  // original by: Brett Zamir (http://brett-zamir.me)
  //   example 1: shuffled = str_shuffle("abcdef");
  //   example 1: shuffled.length
  //   returns 1: 6

  if (arguments.length === 0) {
    throw 'Wrong parameter count for str_shuffle()';
  }

  if (str == null) {
    return '';
  }

  str += '';

  var newStr = '',
    rand, i = str.length;

  while (i) {
    rand = Math.floor(Math.random() * i);
    newStr += str.charAt(rand);
    str = str.substring(0, rand) + str.substr(rand + 1);
    i--;
  }

  return newStr;
}
{% endcodeblock %}

 - [Raw function on GitHub](https://github.com/kvz/phpjs/blob/master/functions/strings/str_shuffle.js)

Please note that php.js uses JavaScript objects as substitutes for PHP arrays, they are 
the closest match to this hashtable-like data structure. 

Please also note that php.js offers community built functions and goes by the 
[McDonald's Theory](https://medium.com/what-i-learned-building/9216e1c9da7d). We'll put online 
functions that are far from perfect, in the hopes to spark better contributions. 
Do you have one? Then please just: 

 - [Edit on GitHub](https://github.com/kvz/phpjs/edit/master/functions/strings/str_shuffle.js)


### Other PHP functions in the strings extension
{% render_partial _includes/custom/strings.html %}
